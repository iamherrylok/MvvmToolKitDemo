<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MvvmToolKitDemo.UI">
    <ControlTemplate x:Key="ErrorValidationTemplate">
        <StackPanel>
            <Border BorderThickness="1" CornerRadius="4">
                <AdornedElementPlaceholder />
            </Border>
            <Border Background="Gray">
                <TextBlock
                    Margin="5,0,0,0"
                    Foreground="Red"
                    Text="{Binding [0].ErrorContent}" />
            </Border>
        </StackPanel>
    </ControlTemplate>

    <Style TargetType="{x:Type local:EditableTextBox}">
        <Setter Property="Control.Background" Value="{DynamicResource TextInput.BackgroundBrush}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource TextInput.ForegroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{DynamicResource TextInput.BorderBrush}" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource TextInput.SelectionBrush}" />
        <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource TextInput.CaretBrush}" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFont}" />
        <Setter Property="FrameworkElement.MinHeight" Value="20" />
        <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxContextMenu}" />
        <Setter Property="TextBoxBase.IsReadOnly" Value="True" />
        <Setter Property="Control.Padding" Value="4,0" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ErrorValidationTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditableTextBox}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        <Grid x:Name="PART_InnerGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="ErrorColumn" Width="Auto" />
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ScrollViewer
                                x:Name="PART_ContentHost"
                                Grid.Column="0"
                                VerticalAlignment="Stretch"
                                Background="{x:Null}"
                                BorderThickness="0"
                                IsTabStop="False"
                                Visibility="Collapsed" />
                            <TextBlock
                                x:Name="PART_ReadOnlyText"
                                Grid.Column="0"
                                Margin="{TemplateBinding Control.Padding}"
                                Padding="2,0"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Background="{x:Null}"
                                Foreground="{TemplateBinding Control.Foreground}"
                                Text="{TemplateBinding TextBox.Text}"
                                TextAlignment="{TemplateBinding TextBox.TextAlignment}"
                                TextDecorations="{TemplateBinding TextBox.TextDecorations}"
                                TextTrimming="WordEllipsis"
                                TextWrapping="{TemplateBinding TextBox.TextWrapping}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="local:EditableTextBox.InEditMode" Value="True">
                            <Setter TargetName="PART_ContentHost" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="PART_ReadOnlyText" Property="UIElement.Visibility" Value="Collapsed" />
                            <Setter Property="TextBoxBase.IsReadOnly" Value="False" />
                            <Setter Property="TextBox.TextDecorations" Value="{x:Null}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="local:EditableTextBox.EditOnMouseDown" Value="False" />
                                <Condition Property="local:EditableTextBox.InEditMode" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="UIElement.IsHitTestVisible" Value="False" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="local:EditableTextBox.InEditMode" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="Yellow" />
                        </MultiTrigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>